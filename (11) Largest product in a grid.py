# In the 20 * 20 grid below, four numbers along a diagonal line
# have been marked in red.

# 08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
# 49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
# 81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
# 52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
# 22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
# 24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
# 32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70
# 67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21
# 24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72
# 21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95
# 78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
# 16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
# 86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
# 19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
# 04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
# 88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
# 04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
# 20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
# 20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
# 01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48

# The product of these numbers is 26 * 63 * 78 * 14 = 1788696.

# What is the greatest product of four adjacent numbers in the same direction
# (up, down, left, right, or diagonally) in the 20 * 20 grid?

r0  = ['08','02','22','97','38','15','00','40','00','75','04','05','07','78','52','12','50','77','91','08']
r1  = ['49','49','99','40','17','81','18','57','60','87','17','40','98','43','69','48','04','56','62','00']
r2  = ['81','49','31','73','55','79','14','29','93','71','40','67','53','88','30','03','49','13','36','65']
r3  = ['52','70','95','23','04','60','11','42','69','24','68','56','01','32','56','71','37','02','36','91']
r4  = ['22','31','16','71','51','67','63','89','41','92','36','54','22','40','40','28','66','33','13','80']
r5  = ['24','47','32','60','99','03','45','02','44','75','33','53','78','36','84','20','35','17','12','50']
r6  = ['32','98','81','28','64','23','67','10','26','38','40','67','59','54','70','66','18','38','64','70']
r7  = ['67','26','20','68','02','62','12','20','95','63','94','39','63','08','40','91','66','49','94','21']
r8  = ['24','55','58','05','66','73','99','26','97','17','78','78','96','83','14','88','34','89','63','72']
r9  = ['21','36','23','09','75','00','76','44','20','45','35','14','00','61','33','97','34','31','33','95']
r10 = ['78','17','53','28','22','75','31','67','15','94','03','80','04','62','16','14','09','53','56','92']
r11 = ['16','39','05','42','96','35','31','47','55','58','88','24','00','17','54','24','36','29','85','57']
r12 = ['86','56','00','48','35','71','89','07','05','44','44','37','44','60','21','58','51','54','17','58']
r13 = ['19','80','81','68','05','94','47','69','28','73','92','13','86','52','17','77','04','89','55','40']
r14 = ['04','52','08','83','97','35','99','16','07','97','57','32','16','26','26','79','33','27','98','66']
r15 = ['88','36','68','87','57','62','20','72','03','46','33','67','46','55','12','32','63','93','53','69']
r16 = ['04','42','16','73','38','25','39','11','24','94','72','18','08','46','29','32','40','62','76','36']
r17 = ['20','69','36','41','72','30','23','88','34','62','99','69','82','67','59','85','74','04','36','16']
r18 = ['20','73','35','29','78','31','90','01','74','31','49','71','48','86','81','16','23','57','05','54']
r19 = ['01','70','54','71','83','51','54','69','16','92','33','48','61','43','52','01','89','19','67','48']

c0 = [r0[0], r1[0], r2[0], r3[0], r4[0], r5[0], r6[0], r7[0], r8[0], r9[0], r10[0], r11[0], r12[0], r13[0], r14[0], r15[0], r16[0], r17[0], r18[0], r19[0]]
c1 = [r0[1], r1[1], r2[1], r3[1], r4[1], r5[1], r6[1], r7[1], r8[1], r9[1], r10[1], r11[1], r12[1], r13[1], r14[1], r15[1], r16[1], r17[1], r18[1], r19[1]]
c2 = [r0[2], r1[2], r2[2], r3[2], r4[2], r5[2], r6[2], r7[2], r8[2], r9[2], r10[2], r11[2], r12[2], r13[2], r14[2], r15[2], r16[2], r17[2], r18[2], r19[2]]
c3  = [r0[3], r1[3], r2[3], r3[3], r4[3], r5[3], r6[3], r7[3], r8[3], r9[3], r10[3], r11[3], r12[3], r13[3], r14[3], r15[3], r16[3], r17[3], r18[3], r19[3]]
c4  = [r0[4], r1[4], r2[4], r3[4], r4[4], r5[4], r6[4], r7[4], r8[4], r9[4], r10[4], r11[4], r12[4], r13[4], r14[4], r15[4], r16[4], r17[4], r18[4], r19[4]]
c5  = [r0[5], r1[5], r2[5], r3[5], r4[5], r5[5], r6[5], r7[5], r8[5], r9[5], r10[5], r11[5], r12[5], r13[5], r14[5], r15[5], r16[5], r17[5], r18[5], r19[5]]
c6  = [r0[6], r1[6], r2[6], r3[6], r4[6], r5[6], r6[6], r7[6], r8[6], r9[6], r10[6], r11[6], r12[6], r13[6], r14[6], r15[6], r16[6], r17[6], r18[6], r19[6]]
c7  = [r0[7], r1[7], r2[7], r3[7], r4[7], r5[7], r6[7], r7[7], r8[7], r9[7], r10[7], r11[7], r12[7], r13[7], r14[7], r15[7], r16[7], r17[7], r18[7], r19[7]]
c8  = [r0[8], r1[8], r2[8], r3[8], r4[8], r5[8], r6[8], r7[8], r8[8], r9[8], r10[8], r11[8], r12[8], r13[8], r14[8], r15[8], r16[8], r17[8], r18[8], r19[8]]
c9  = [r0[9], r1[9], r2[9], r3[9], r4[9], r5[9], r6[9], r7[9], r8[9], r9[9], r10[9], r11[9], r12[9], r13[9], r14[9], r15[9], r16[9], r17[9], r18[9], r19[9]]
c10 = [r0[10], r1[10], r2[10], r3[10], r4[10], r5[10], r6[10], r7[10], r8[10], r9[10], r10[10], r11[10], r12[10], r13[10], r14[10], r15[10], r16[10], r17[10], r18[10], r19[10]]
c11 = [r0[11], r1[11], r2[11], r3[11], r4[11], r5[11], r6[11], r7[11], r8[11], r9[11], r10[11], r11[11], r12[11], r13[11], r14[11], r15[11], r16[11], r17[11], r18[11], r19[11]]
c12 = [r0[12], r1[12], r2[12], r3[12], r4[12], r5[12], r6[12], r7[12], r8[12], r9[12], r10[12], r11[12], r12[12], r13[12], r14[12], r15[12], r16[12], r17[12], r18[12], r19[12]]
c13 = [r0[13], r1[13], r2[13], r3[13], r4[13], r5[13], r6[13], r7[13], r8[13], r9[13], r10[13], r11[13], r12[13], r13[13], r14[13], r15[13], r16[13], r17[13], r18[13], r19[13]]
c14 = [r0[14], r1[14], r2[14], r3[14], r4[14], r5[14], r6[14], r7[14], r8[14], r9[14], r10[14], r11[14], r12[14], r13[14], r14[14], r15[14], r16[14], r17[14], r18[14], r19[14]]
c15 = [r0[15], r1[15], r2[15], r3[15], r4[15], r5[15], r6[15], r7[15], r8[15], r9[15], r10[15], r11[15], r12[15], r13[15], r14[15], r15[15], r16[15], r17[15], r18[15], r19[15]]
c16 = [r0[16], r1[16], r2[16], r3[16], r4[16], r5[16], r6[16], r7[16], r8[16], r9[16], r10[16], r11[16], r12[16], r13[16], r14[16], r15[16], r16[16], r17[16], r18[16], r19[16]]
c17 = [r0[17], r1[17], r2[17], r3[17], r4[17], r5[17], r6[17], r7[17], r8[17], r9[17], r10[17], r11[17], r12[17], r13[17], r14[17], r15[17], r16[17], r17[17], r18[17], r19[17]]
c18 = [r0[18], r1[18], r2[18], r3[18], r4[18], r5[18], r6[18], r7[18], r8[18], r9[18], r10[18], r11[18], r12[18], r13[18], r14[18], r15[18], r16[18], r17[18], r18[18], r19[18]]
c19 = [r0[19], r1[19], r2[19], r3[19], r4[19], r5[19], r6[19], r7[19], r8[19], r9[19], r10[19], r11[19], r12[19], r13[19], r14[19], r15[19], r16[19], r17[19], r18[19], r19[19]]

rowcol = [r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, c0, c1, c2,c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19]

adjacent_numbers = []
greatest_product = 0
for rorc in rowcol:
	for n in range(0, 17, 1):
		current_product = int(rorc[n]) * int(rorc[n + 1]) * int(rorc[n + 2]) * int(rorc[n + 3])
		if greatest_product < current_product:
			adjacent_numbers = []
			adjacent_numbers.append(rorc[n])
			adjacent_numbers.append(rorc[n + 1])
			adjacent_numbers.append(rorc[n + 2])
			adjacent_numbers.append(rorc[n + 3])
			greatest_product = current_product

print adjacent_numbers
print greatest_product
